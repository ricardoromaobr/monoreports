
// This file has been generated by the GUI designer. Do not modify.
namespace MonoReports.Gui.Widgets
{
	public partial class MonoreportsDesignerControl
	{
		private global::Gtk.UIManager UIManager;
		
		private global::Gtk.Action FileAction;
		
		private global::Gtk.Action FileAction1;
		
		private global::Gtk.Action quitAction;
		
		private global::Gtk.Action HelpAction;
		
		private global::Gtk.Action HelpAction1;
		
		private global::Gtk.Action executeAction;
		
		private global::Gtk.Action aboutAction;
		
		private global::Gtk.Action zoomFitAction;
		
		private global::Gtk.Action openAction;
		
		private global::Gtk.Action saveAction;
		
		private global::Gtk.Action executeAction1;
		
		private global::Gtk.Action dialogErrorAction;
		
		private global::Gtk.ToggleAction editAction;
		
		private global::Gtk.Action sortAscendingAction;
		
		private global::Gtk.Action EditAction;
		
		private global::Gtk.Action ReportSettingsAction;
		
		private global::Gtk.VBox mainVbox;
		
		private global::Gtk.MenuBar mainMenubar;
		
		private global::Gtk.Toolbar mainToolbar;
		
		private global::Gtk.HBox contentHbox;
		
		private global::Gtk.HPaned mainHPaned;
		
		private global::MonoReports.Gui.Widgets.MainDesignView maindesignview1;
		
		private global::Gtk.VPaned rightVPaned;
		
		private global::MonoReports.Gui.Widgets.ReportExplorer reportExplorer;
		
		private global::PropertyGrid.PropertyGrid mainPropertygrid;
		
		private global::Gtk.Statusbar bottomStatusbar;
		
		private global::Gtk.Label StatusBarLabel;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoReports.Gui.Widgets.MonoreportsDesignerControl
			Stetic.BinContainer w1 = global::Stetic.BinContainer.Attach (this);
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w2 = new global::Gtk.ActionGroup ("Default");
			this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
			this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
			w2.Add (this.FileAction, null);
			this.FileAction1 = new global::Gtk.Action ("FileAction1", global::Mono.Unix.Catalog.GetString ("File"), null, null);
			this.FileAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
			w2.Add (this.FileAction1, null);
			this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("Quit"), null, "gtk-quit");
			this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Quit");
			w2.Add (this.quitAction, null);
			this.HelpAction = new global::Gtk.Action ("HelpAction", global::Mono.Unix.Catalog.GetString ("Help"), null, null);
			this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Help");
			w2.Add (this.HelpAction, null);
			this.HelpAction1 = new global::Gtk.Action ("HelpAction1", global::Mono.Unix.Catalog.GetString ("Help"), null, null);
			this.HelpAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("About");
			w2.Add (this.HelpAction1, null);
			this.executeAction = new global::Gtk.Action ("executeAction", null, null, "gtk-execute");
			w2.Add (this.executeAction, null);
			this.aboutAction = new global::Gtk.Action ("aboutAction", global::Mono.Unix.Catalog.GetString ("About"), null, "gtk-about");
			this.aboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("About");
			w2.Add (this.aboutAction, null);
			this.zoomFitAction = new global::Gtk.Action ("zoomFitAction", null, null, "gtk-zoom-fit");
			w2.Add (this.zoomFitAction, null);
			this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("_Otwórz"), null, "gtk-open");
			this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Otwórz");
			w2.Add (this.openAction, null);
			this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("_Zapisz"), null, "gtk-save");
			this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Zapisz");
			w2.Add (this.saveAction, null);
			this.executeAction1 = new global::Gtk.Action ("executeAction1", null, null, "gtk-execute");
			w2.Add (this.executeAction1, null);
			this.dialogErrorAction = new global::Gtk.Action ("dialogErrorAction", null, null, "gtk-dialog-error");
			w2.Add (this.dialogErrorAction, null);
			this.editAction = new global::Gtk.ToggleAction ("editAction", null, null, "gtk-edit");
			w2.Add (this.editAction, null);
			this.sortAscendingAction = new global::Gtk.Action ("sortAscendingAction", null, null, "gtk-sort-ascending");
			w2.Add (this.sortAscendingAction, null);
			this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("Edit"), null, null);
			this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit");
			w2.Add (this.EditAction, null);
			this.ReportSettingsAction = new global::Gtk.Action ("ReportSettingsAction", global::Mono.Unix.Catalog.GetString ("Report Settings"), null, null);
			this.ReportSettingsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Report Settings");
			w2.Add (this.ReportSettingsAction, null);
			this.UIManager.InsertActionGroup (w2, 0);
			this.Name = "MonoReports.Gui.Widgets.MonoreportsDesignerControl";
			// Container child MonoReports.Gui.Widgets.MonoreportsDesignerControl.Gtk.Container+ContainerChild
			this.mainVbox = new global::Gtk.VBox ();
			this.mainVbox.Name = "mainVbox";
			this.mainVbox.Spacing = -1;
			// Container child mainVbox.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString (@"<ui><menubar name='mainMenubar'><menu name='FileAction1' action='FileAction1'><menuitem name='openAction' action='openAction'/><menuitem name='saveAction' action='saveAction'/><menuitem name='quitAction' action='quitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='ReportSettingsAction' action='ReportSettingsAction'/></menu><menu name='HelpAction1' action='HelpAction1'><menuitem name='aboutAction' action='aboutAction'/></menu></menubar></ui>");
			this.mainMenubar = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/mainMenubar")));
			this.mainMenubar.Name = "mainMenubar";
			this.mainVbox.Add (this.mainMenubar);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.mainVbox [this.mainMenubar]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child mainVbox.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><toolbar name=\'mainToolbar\'/></ui>");
			this.mainToolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/mainToolbar")));
			this.mainToolbar.Name = "mainToolbar";
			this.mainToolbar.ShowArrow = false;
			this.mainToolbar.IconSize = ((global::Gtk.IconSize)(1));
			this.mainVbox.Add (this.mainToolbar);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.mainVbox [this.mainToolbar]));
			w4.Position = 1;
			w4.Expand = false;
			w4.Fill = false;
			// Container child mainVbox.Gtk.Box+BoxChild
			this.contentHbox = new global::Gtk.HBox ();
			this.contentHbox.Name = "contentHbox";
			this.contentHbox.Spacing = 6;
			// Container child contentHbox.Gtk.Box+BoxChild
			this.mainHPaned = new global::Gtk.HPaned ();
			this.mainHPaned.CanFocus = true;
			this.mainHPaned.Name = "mainHPaned";
			this.mainHPaned.Position = 721;
			// Container child mainHPaned.Gtk.Paned+PanedChild
			this.maindesignview1 = new global::MonoReports.Gui.Widgets.MainDesignView ();
			this.maindesignview1.Events = ((global::Gdk.EventMask)(256));
			this.maindesignview1.Name = "maindesignview1";
			this.mainHPaned.Add (this.maindesignview1);
			global::Gtk.Paned.PanedChild w5 = ((global::Gtk.Paned.PanedChild)(this.mainHPaned [this.maindesignview1]));
			w5.Resize = false;
			// Container child mainHPaned.Gtk.Paned+PanedChild
			this.rightVPaned = new global::Gtk.VPaned ();
			this.rightVPaned.CanFocus = true;
			this.rightVPaned.Name = "rightVPaned";
			this.rightVPaned.Position = 291;
			// Container child rightVPaned.Gtk.Paned+PanedChild
			this.reportExplorer = new global::MonoReports.Gui.Widgets.ReportExplorer ();
			this.reportExplorer.Name = "reportExplorer";
			this.rightVPaned.Add (this.reportExplorer);
			global::Gtk.Paned.PanedChild w6 = ((global::Gtk.Paned.PanedChild)(this.rightVPaned [this.reportExplorer]));
			w6.Resize = false;
			// Container child rightVPaned.Gtk.Paned+PanedChild
			this.mainPropertygrid = new global::PropertyGrid.PropertyGrid ();
			this.mainPropertygrid.Name = "mainPropertygrid";
			this.mainPropertygrid.ShowToolbar = false;
			this.mainPropertygrid.ShowHelp = false;
			this.rightVPaned.Add (this.mainPropertygrid);
			this.mainHPaned.Add (this.rightVPaned);
			global::Gtk.Paned.PanedChild w8 = ((global::Gtk.Paned.PanedChild)(this.mainHPaned [this.rightVPaned]));
			w8.Resize = false;
			this.contentHbox.Add (this.mainHPaned);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.contentHbox [this.mainHPaned]));
			w9.Position = 0;
			this.mainVbox.Add (this.contentHbox);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.mainVbox [this.contentHbox]));
			w10.Position = 2;
			// Container child mainVbox.Gtk.Box+BoxChild
			this.bottomStatusbar = new global::Gtk.Statusbar ();
			this.bottomStatusbar.Name = "bottomStatusbar";
			this.bottomStatusbar.Spacing = 6;
			// Container child bottomStatusbar.Gtk.Box+BoxChild
			this.StatusBarLabel = new global::Gtk.Label ();
			this.StatusBarLabel.Name = "StatusBarLabel";
			this.bottomStatusbar.Add (this.StatusBarLabel);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.bottomStatusbar [this.StatusBarLabel]));
			w11.Position = 1;
			w11.Expand = false;
			w11.Fill = false;
			this.mainVbox.Add (this.bottomStatusbar);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.mainVbox [this.bottomStatusbar]));
			w12.Position = 3;
			w12.Expand = false;
			w12.Fill = false;
			this.Add (this.mainVbox);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			w1.SetUiManager (UIManager);
			this.Hide ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
			this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
			this.aboutAction.Activated += new global::System.EventHandler (this.OnAboutActionActivated);
			this.openAction.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
			this.saveAction.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
			this.editAction.Activated += new global::System.EventHandler (this.OnEditActionActivated);
			this.ReportSettingsAction.Activated += new global::System.EventHandler (this.OnReportSettingsActionActivated);
			this.mainPropertygrid.Changed += new global::System.EventHandler (this.OnMainPropertygridChanged);
		}
	}
}
